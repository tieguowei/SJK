<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.resale.background.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.resale.background.pojo.Employee" >
    <id column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="employee_no" property="employeeNo" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="dept_no" property="deptNo" jdbcType="VARCHAR" />
    <result column="dept_id_one" property="deptIdOne" jdbcType="INTEGER" />
    <result column="dept_id_two" property="deptIdTwo" jdbcType="INTEGER" />
    <result column="dept_id_three" property="deptIdThree" jdbcType="INTEGER" />
    <result column="dept_id_four" property="deptIdFour" jdbcType="INTEGER" />
    <result column="dept_id_five" property="deptIdFive" jdbcType="INTEGER" />
    <result column="dept_id_six" property="deptIdSix" jdbcType="INTEGER" />
    <result column="activated_state" property="activatedState" jdbcType="CHAR" />
    <result column="entry_time" property="entryTime" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="INTEGER" />
     <result column="departmentname" property="departmentname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    employee_id, card_no, name, sex, employee_no, email, password, salt, mobile, telephone, 
    dept_id, dept_no, dept_id_one, dept_id_two, dept_id_three, dept_id_four, dept_id_five, 
    dept_id_six, activated_state, entry_time, remark, create_time, update_time, operator
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.resale.background.pojo.EmployeeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,(select d.dept_name from t_department d where d.dept_id=e.dept_id LIMIT 1) departmentname
    from t_employee e
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_employee
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.resale.background.pojo.EmployeeExample" >
    delete from t_employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.resale.background.pojo.Employee" >
    insert into t_employee (employee_id, card_no, name, 
      sex, employee_no, email, 
      password, salt, mobile, 
      telephone, dept_id, dept_no, 
      dept_id_one, dept_id_two, dept_id_three, 
      dept_id_four, dept_id_five, dept_id_six, 
      activated_state, entry_time, remark, 
      create_time, update_time, operator
      )
    values (#{employeeId,jdbcType=INTEGER}, #{cardNo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{employeeNo,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, #{deptNo,jdbcType=VARCHAR}, 
      #{deptIdOne,jdbcType=INTEGER}, #{deptIdTwo,jdbcType=INTEGER}, #{deptIdThree,jdbcType=INTEGER}, 
      #{deptIdFour,jdbcType=INTEGER}, #{deptIdFive,jdbcType=INTEGER}, #{deptIdSix,jdbcType=INTEGER}, 
      #{activatedState,jdbcType=CHAR}, #{entryTime,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.resale.background.pojo.Employee" >
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="cardNo != null" >
        card_no,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="employeeNo != null" >
        employee_no,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="deptNo != null" >
        dept_no,
      </if>
      <if test="deptIdOne != null" >
        dept_id_one,
      </if>
      <if test="deptIdTwo != null" >
        dept_id_two,
      </if>
      <if test="deptIdThree != null" >
        dept_id_three,
      </if>
      <if test="deptIdFour != null" >
        dept_id_four,
      </if>
      <if test="deptIdFive != null" >
        dept_id_five,
      </if>
      <if test="deptIdSix != null" >
        dept_id_six,
      </if>
      <if test="activatedState != null" >
        activated_state,
      </if>
      <if test="entryTime != null" >
        entry_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="operator != null" >
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="cardNo != null" >
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="employeeNo != null" >
        #{employeeNo,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptNo != null" >
        #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="deptIdOne != null" >
        #{deptIdOne,jdbcType=INTEGER},
      </if>
      <if test="deptIdTwo != null" >
        #{deptIdTwo,jdbcType=INTEGER},
      </if>
      <if test="deptIdThree != null" >
        #{deptIdThree,jdbcType=INTEGER},
      </if>
      <if test="deptIdFour != null" >
        #{deptIdFour,jdbcType=INTEGER},
      </if>
      <if test="deptIdFive != null" >
        #{deptIdFive,jdbcType=INTEGER},
      </if>
      <if test="deptIdSix != null" >
        #{deptIdSix,jdbcType=INTEGER},
      </if>
      <if test="activatedState != null" >
        #{activatedState,jdbcType=CHAR},
      </if>
      <if test="entryTime != null" >
        #{entryTime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.resale.background.pojo.EmployeeExample" resultType="java.lang.Integer" >
    select count(*) from t_employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_employee
    <set >
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.cardNo != null" >
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.employeeNo != null" >
        employee_no = #{record.employeeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null" >
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null" >
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.deptNo != null" >
        dept_no = #{record.deptNo,jdbcType=VARCHAR},
      </if>
      <if test="record.deptIdOne != null" >
        dept_id_one = #{record.deptIdOne,jdbcType=INTEGER},
      </if>
      <if test="record.deptIdTwo != null" >
        dept_id_two = #{record.deptIdTwo,jdbcType=INTEGER},
      </if>
      <if test="record.deptIdThree != null" >
        dept_id_three = #{record.deptIdThree,jdbcType=INTEGER},
      </if>
      <if test="record.deptIdFour != null" >
        dept_id_four = #{record.deptIdFour,jdbcType=INTEGER},
      </if>
      <if test="record.deptIdFive != null" >
        dept_id_five = #{record.deptIdFive,jdbcType=INTEGER},
      </if>
      <if test="record.deptIdSix != null" >
        dept_id_six = #{record.deptIdSix,jdbcType=INTEGER},
      </if>
      <if test="record.activatedState != null" >
        activated_state = #{record.activatedState,jdbcType=CHAR},
      </if>
      <if test="record.entryTime != null" >
        entry_time = #{record.entryTime,jdbcType=DATE},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_employee
    set employee_id = #{record.employeeId,jdbcType=INTEGER},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      employee_no = #{record.employeeNo,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      dept_no = #{record.deptNo,jdbcType=VARCHAR},
      dept_id_one = #{record.deptIdOne,jdbcType=INTEGER},
      dept_id_two = #{record.deptIdTwo,jdbcType=INTEGER},
      dept_id_three = #{record.deptIdThree,jdbcType=INTEGER},
      dept_id_four = #{record.deptIdFour,jdbcType=INTEGER},
      dept_id_five = #{record.deptIdFive,jdbcType=INTEGER},
      dept_id_six = #{record.deptIdSix,jdbcType=INTEGER},
      activated_state = #{record.activatedState,jdbcType=CHAR},
      entry_time = #{record.entryTime,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.resale.background.pojo.Employee" >
    update t_employee
    <set >
      <if test="cardNo != null" >
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="employeeNo != null" >
        employee_no = #{employeeNo,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptNo != null" >
        dept_no = #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="deptIdOne != null" >
        dept_id_one = #{deptIdOne,jdbcType=INTEGER},
      </if>
      <if test="deptIdTwo != null" >
        dept_id_two = #{deptIdTwo,jdbcType=INTEGER},
      </if>
      <if test="deptIdThree != null" >
        dept_id_three = #{deptIdThree,jdbcType=INTEGER},
      </if>
      <if test="deptIdFour != null" >
        dept_id_four = #{deptIdFour,jdbcType=INTEGER},
      </if>
      <if test="deptIdFive != null" >
        dept_id_five = #{deptIdFive,jdbcType=INTEGER},
      </if>
      <if test="deptIdSix != null" >
        dept_id_six = #{deptIdSix,jdbcType=INTEGER},
      </if>
      <if test="activatedState != null" >
        activated_state = #{activatedState,jdbcType=CHAR},
      </if>
      <if test="entryTime != null" >
        entry_time = #{entryTime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=INTEGER},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resale.background.pojo.Employee" >
    update t_employee
    set card_no = #{cardNo,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      employee_no = #{employeeNo,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      dept_no = #{deptNo,jdbcType=VARCHAR},
      dept_id_one = #{deptIdOne,jdbcType=INTEGER},
      dept_id_two = #{deptIdTwo,jdbcType=INTEGER},
      dept_id_three = #{deptIdThree,jdbcType=INTEGER},
      dept_id_four = #{deptIdFour,jdbcType=INTEGER},
      dept_id_five = #{deptIdFive,jdbcType=INTEGER},
      dept_id_six = #{deptIdSix,jdbcType=INTEGER},
      activated_state = #{activatedState,jdbcType=CHAR},
      entry_time = #{entryTime,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=INTEGER}
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  
  <!-- 根据用户登陆账号查询用户信息 -->
  <select id="getEmployeeByEmployeeNo" parameterType="hashmap" resultMap="BaseResultMap">
	  SELECT
		<include refid="Base_Column_List"/>
	FROM
		t_employee
	WHERE
		employee_no =#{employeeNo}
  </select>
  
   <!-- 页面列表查询条件 -->
  <sql id="whereClause">
  	<if test="employeeNo != null">
  		and employee_no  = #{employeeNo}
  	</if>
  	<if test="employeeName != null">
  		and name like '${employeeName}%'
  	</if>
  </sql>
  <!-- 查询员工列表 -->
  <select id="findAllRetMapByPage" parameterType="hashmap" resultType="hashmap">
 	 SELECT
		employee_id,
		name,
		CASE
		WHEN sex = '0' THEN '男' WHEN sex = '1' THEN '女' ELSE '' END AS sex,
		 employee_no,
	 	mobile,
	 	CASE
		WHEN activated_state = '1' THEN '启用'
		WHEN activated_state = '2' THEN '删除'
		WHEN activated_state = '3' THEN '禁用'
		 ELSE '' END AS activated_state
	FROM
		t_employee 
	WHERE
		activated_state != '2'
		<include refid="whereClause" />
		order by create_time desc 
		limit #{startIndex},#{pageSize}
  </select>
  
   <!-- 查询总条数 -->
  <select id="findAllByPageCount" parameterType="hashmap" resultType="long">
 	 SELECT count(*) FROM t_employee  WHERE activated_state != '2'
 	 <include refid="whereClause" />
  </select>
  
  <!--更改员工状态（1：启用 2：删除 3：禁用） -->
  <update id="deleteEmployee" parameterType="hashmap">
  	UPDATE 
  	 	t_employee
		SET activated_state =#{activatedState}
	WHERE
	employee_id =#{employeeId}
  </update>
  
  
</mapper>