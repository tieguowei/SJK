<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.resale.background.mapper.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.resale.background.pojo.Department" >
    <id column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="levels" property="levels" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="INTEGER" />
    <result column="departmentname" property="departmentname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    dept_id, dept_name, parent_id, levels, sort, remark, create_time, update_time, operator
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.resale.background.pojo.DepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_department
    where dept_id = #{deptId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_department
    where dept_id = #{deptId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.resale.background.pojo.DepartmentExample" >
    delete from t_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.resale.background.pojo.Department" >
    insert into t_department (dept_id, dept_name, parent_id, 
      levels, sort, remark, 
      create_time, update_time, operator
      )
    values (#{deptId,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{levels,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.resale.background.pojo.Department" >
    insert into t_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="deptName != null" >
        dept_name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="levels != null" >
        levels,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="operator != null" >
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null" >
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="levels != null" >
        #{levels,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.resale.background.pojo.DepartmentExample" resultType="java.lang.Integer" >
    select count(*) from t_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_department
    <set >
      <if test="record.deptId != null" >
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.deptName != null" >
        dept_name = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.levels != null" >
        levels = #{record.levels,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_department
    set dept_id = #{record.deptId,jdbcType=INTEGER},
      dept_name = #{record.deptName,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      levels = #{record.levels,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.resale.background.pojo.Department" >
    update t_department
    <set >
      <if test="deptName != null" >
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="levels != null" >
        levels = #{levels,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=INTEGER},
      </if>
    </set>
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resale.background.pojo.Department" >
    update t_department
    set dept_name = #{deptName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      levels = #{levels,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=INTEGER}
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>
  
  <!-- 查询所有部门 -->
  <select id="findAllRetMapByPage" parameterType="hashmap" resultType="hashmap">
  	SELECT
		dept_id,
		dept_name,
		parent_id,
		levels,
		sort,
		remark,
		create_time
	FROM
		t_department
	where 1 = 1 
	ORDER BY sort ASC
  </select>
  
  <select id="findLevelsByDeptId" parameterType="integer" resultMap="BaseResultMap">
	  SELECT
		<include refid="Base_Column_List" />
	FROM
		t_department
	where dept_id = #{parentId}
  </select>
  
   <!-- 查询所有pid为0的菜单 -->
  <select id="getParentDeptList" resultType="hashmap">
	select dept_id deptId,dept_name deptName,parent_id parentId,levels levels,sort
	from t_department where parent_id=0 ORDER BY sort desc
  </select>
  <select id="queryChildDeptByPidType" parameterType="String" resultMap="BaseResultMap">
  	select dept_id,dept_name,parent_id,levels,sort
	from t_department where parent_id=#{pid} ORDER BY sort desc;
  </select>
   <!-- 修改回显-->
  <select id="getDepartmentById" parameterType="integer" resultMap="BaseResultMap">
  	SELECT
		dept_id,
		dept_name,
		parent_id,
		levels,
		sort,
		remark,
		create_time,
		(select d.dept_name from t_department d where d.dept_id=t.parent_id LIMIT 1) departmentname
	FROM
		t_department t
	where 1 = 1 and dept_id=#{did}
  </select>
  <update id="updateDepartment" parameterType="com.resale.background.pojo.Department">
    update t_department
    <set >
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null" >
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="levels != null" >
        levels = #{levels,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=INTEGER},
      </if>
    </set>
     where dept_id = #{deptId,jdbcType=INTEGER}
  </update>
</mapper>